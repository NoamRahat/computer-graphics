<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>func_common.inl</FILENAME>
      <LINE>665</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'glm::floatBitsToInt' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>glm::floatBitsToInt</FUNCTION>
    <DECORATED>?floatBitsToInt@glm@@YAHM@Z</DECORATED>
    <FUNCLINE>665</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>func_common.inl</FILENAME>
      <LINE>665</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26497</DEFECTCODE>
    <DESCRIPTION>You can attempt to make 'glm::floatBitsToInt' constexpr unless it contains any undefined behavior (f.4).</DESCRIPTION>
    <FUNCTION>glm::floatBitsToInt</FUNCTION>
    <DECORATED>?floatBitsToInt@glm@@YAHM@Z</DECORATED>
    <FUNCLINE>665</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>func_common.inl</FILENAME>
      <LINE>684</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'glm::floatBitsToUint' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>glm::floatBitsToUint</FUNCTION>
    <DECORATED>?floatBitsToUint@glm@@YAIM@Z</DECORATED>
    <FUNCLINE>684</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>func_common.inl</FILENAME>
      <LINE>684</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26497</DEFECTCODE>
    <DESCRIPTION>You can attempt to make 'glm::floatBitsToUint' constexpr unless it contains any undefined behavior (f.4).</DESCRIPTION>
    <FUNCTION>glm::floatBitsToUint</FUNCTION>
    <DECORATED>?floatBitsToUint@glm@@YAIM@Z</DECORATED>
    <FUNCLINE>684</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>func_common.inl</FILENAME>
      <LINE>703</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'glm::intBitsToFloat' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>glm::intBitsToFloat</FUNCTION>
    <DECORATED>?intBitsToFloat@glm@@YAMH@Z</DECORATED>
    <FUNCLINE>703</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>func_common.inl</FILENAME>
      <LINE>703</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26497</DEFECTCODE>
    <DESCRIPTION>You can attempt to make 'glm::intBitsToFloat' constexpr unless it contains any undefined behavior (f.4).</DESCRIPTION>
    <FUNCTION>glm::intBitsToFloat</FUNCTION>
    <DECORATED>?intBitsToFloat@glm@@YAMH@Z</DECORATED>
    <FUNCLINE>703</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>func_common.inl</FILENAME>
      <LINE>722</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'glm::uintBitsToFloat' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>glm::uintBitsToFloat</FUNCTION>
    <DECORATED>?uintBitsToFloat@glm@@YAMI@Z</DECORATED>
    <FUNCLINE>722</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>func_common.inl</FILENAME>
      <LINE>722</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26497</DEFECTCODE>
    <DESCRIPTION>You can attempt to make 'glm::uintBitsToFloat' constexpr unless it contains any undefined behavior (f.4).</DESCRIPTION>
    <FUNCTION>glm::uintBitsToFloat</FUNCTION>
    <DECORATED>?uintBitsToFloat@glm@@YAMI@Z</DECORATED>
    <FUNCLINE>722</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>4</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'glm::detail::overflow' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>glm::detail::overflow</FUNCTION>
    <DECORATED>?overflow@detail@glm@@YAMXZ</DECORATED>
    <FUNCLINE>4</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>4</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26497</DEFECTCODE>
    <DESCRIPTION>You can attempt to make 'glm::detail::overflow' constexpr unless it contains any undefined behavior (f.4).</DESCRIPTION>
    <FUNCTION>glm::detail::overflow</FUNCTION>
    <DECORATED>?overflow@detail@glm@@YAMXZ</DECORATED>
    <FUNCLINE>4</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>15</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor should not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>glm::detail::uif32::{ctor}</FUNCTION>
    <DECORATED>??0uif32@detail@glm@@QEAA@XZ</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>19</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'glm::detail::uif32::uif32' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>glm::detail::uif32::{ctor}</FUNCTION>
    <DECORATED>??0uif32@detail@glm@@QEAA@M@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>23</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'glm::detail::uif32::uif32' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>glm::detail::uif32::{ctor}</FUNCTION>
    <DECORATED>??0uif32@detail@glm@@QEAA@I@Z</DECORATED>
    <FUNCLINE>23</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>33</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 's' does not change after construction, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>glm::detail::toFloat32</FUNCTION>
    <DECORATED>?toFloat32@detail@glm@@YAMF@Z</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>84</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>glm::detail::toFloat32</FUNCTION>
    <DECORATED>?toFloat32@detail@glm@@YAMF@Z</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>74</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>glm::detail::toFloat32</FUNCTION>
    <DECORATED>?toFloat32@detail@glm@@YAMF@Z</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>101</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>glm::detail::toFloat32</FUNCTION>
    <DECORATED>?toFloat32@detail@glm@@YAMF@Z</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>46</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>glm::detail::toFloat32</FUNCTION>
    <DECORATED>?toFloat32@detail@glm@@YAMF@Z</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>109</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'i' does not change after construction, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>glm::detail::toFloat16</FUNCTION>
    <DECORATED>?toFloat16@detail@glm@@YAFAEBM@Z</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>121</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 's' does not change after construction, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>glm::detail::toFloat16</FUNCTION>
    <DECORATED>?toFloat16@detail@glm@@YAFAEBM@Z</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>109</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>glm::detail::toFloat16</FUNCTION>
    <DECORATED>?toFloat16@detail@glm@@YAFAEBM@Z</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>141</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>glm::detail::toFloat16</FUNCTION>
    <DECORATED>?toFloat16@detail@glm@@YAFAEBM@Z</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>169</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>glm::detail::toFloat16</FUNCTION>
    <DECORATED>?toFloat16@detail@glm@@YAFAEBM@Z</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>195</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>glm::detail::toFloat16</FUNCTION>
    <DECORATED>?toFloat16@detail@glm@@YAFAEBM@Z</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>180</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>glm::detail::toFloat16</FUNCTION>
    <DECORATED>?toFloat16@detail@glm@@YAFAEBM@Z</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>228</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>glm::detail::toFloat16</FUNCTION>
    <DECORATED>?toFloat16@detail@glm@@YAFAEBM@Z</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>236</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>glm::detail::toFloat16</FUNCTION>
    <DECORATED>?toFloat16@detail@glm@@YAFAEBM@Z</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>func_integer.inl</FILENAME>
      <LINE>178</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'glm::uaddCarry' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>glm::uaddCarry</FUNCTION>
    <DECORATED>?uaddCarry@glm@@YAIAEBI0AEAI@Z</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>func_integer.inl</FILENAME>
      <LINE>181</LINE>
      <COLUMN>97</COLUMN>
    </SFA>
    <DEFECTCODE>26814</DEFECTCODE>
    <DESCRIPTION>The const variable 'Max32' can be computed at compile-time. Consider using constexpr (con.5).</DESCRIPTION>
    <FUNCTION>glm::uaddCarry</FUNCTION>
    <DECORATED>?uaddCarry@glm@@YAIAEBI0AEAI@Z</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>func_integer.inl</FILENAME>
      <LINE>183</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>glm::uaddCarry</FUNCTION>
    <DECORATED>?uaddCarry@glm@@YAIAEBI0AEAI@Z</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>func_integer.inl</FILENAME>
      <LINE>196</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'glm::usubBorrow' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>glm::usubBorrow</FUNCTION>
    <DECORATED>?usubBorrow@glm@@YAIAEBI0AEAI@Z</DECORATED>
    <FUNCLINE>196</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>func_integer.inl</FILENAME>
      <LINE>202</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>glm::usubBorrow</FUNCTION>
    <DECORATED>?usubBorrow@glm@@YAIAEBI0AEAI@Z</DECORATED>
    <FUNCLINE>196</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>func_integer.inl</FILENAME>
      <LINE>215</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'glm::umulExtended' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>glm::umulExtended</FUNCTION>
    <DECORATED>?umulExtended@glm@@YAXAEBI0AEAI1@Z</DECORATED>
    <FUNCLINE>215</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>func_integer.inl</FILENAME>
      <LINE>218</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>glm::umulExtended</FUNCTION>
    <DECORATED>?umulExtended@glm@@YAXAEBI0AEAI1@Z</DECORATED>
    <FUNCLINE>215</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>func_integer.inl</FILENAME>
      <LINE>219</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>glm::umulExtended</FUNCTION>
    <DECORATED>?umulExtended@glm@@YAXAEBI0AEAI1@Z</DECORATED>
    <FUNCLINE>215</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>func_integer.inl</FILENAME>
      <LINE>231</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'glm::imulExtended' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>glm::imulExtended</FUNCTION>
    <DECORATED>?imulExtended@glm@@YAXHHAEAH0@Z</DECORATED>
    <FUNCLINE>231</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>func_integer.inl</FILENAME>
      <LINE>234</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>glm::imulExtended</FUNCTION>
    <DECORATED>?imulExtended@glm@@YAXHHAEAH0@Z</DECORATED>
    <FUNCLINE>231</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>func_integer.inl</FILENAME>
      <LINE>235</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>glm::imulExtended</FUNCTION>
    <DECORATED>?imulExtended@glm@@YAXHHAEAH0@Z</DECORATED>
    <FUNCLINE>231</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\CG\</FILEPATH>
      <FILENAME>light.cpp</FILENAME>
      <LINE>3</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor should not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>lightSourses::{ctor}</FUNCTION>
    <DECORATED>??0lightSourses@@QEAA@XZ</DECORATED>
    <FUNCLINE>3</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\CG\</FILEPATH>
      <FILENAME>light.cpp</FILENAME>
      <LINE>7</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class lightSourses', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>lightSourses::{dtor}</FUNCTION>
    <DECORATED>??1lightSourses@@QEAA@XZ</DECORATED>
    <FUNCLINE>7</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\CG\</FILEPATH>
      <FILENAME>light.cpp</FILENAME>
      <LINE>11</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'lightSourses::TranslateLight' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>lightSourses::TranslateLight</FUNCTION>
    <DECORATED>?TranslateLight@lightSourses@@QEAAX_NMMM@Z</DECORATED>
    <FUNCLINE>11</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\CG\</FILEPATH>
      <FILENAME>light.cpp</FILENAME>
      <LINE>16</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'lightSourses::colorLight' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>lightSourses::colorLight</FUNCTION>
    <DECORATED>?colorLight@lightSourses@@QEAAX_NMMM@Z</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>type_vec2.inl</FILENAME>
      <LINE>85</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26467</DEFECTCODE>
    <DESCRIPTION>Converting from floating point to unsigned integral types results in non-portable code if the double/float has a negative value. Use gsl::narrow_cast or gsl::narrow instead to guard against undefined behavior and potential data loss (es.46).</DESCRIPTION>
    <FUNCTION>glm::vec&lt;2,unsigned short,0&gt;::{ctor}</FUNCTION>
    <DECORATED>??$?0M$0A@@?$vec@$01G$0A@@glm@@QEAA@AEBU?$vec@$01M$0A@@1@@Z</DECORATED>
    <FUNCLINE>84</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>type_vec2.inl</FILENAME>
      <LINE>86</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26467</DEFECTCODE>
    <DESCRIPTION>Converting from floating point to unsigned integral types results in non-portable code if the double/float has a negative value. Use gsl::narrow_cast or gsl::narrow instead to guard against undefined behavior and potential data loss (es.46).</DESCRIPTION>
    <FUNCTION>glm::vec&lt;2,unsigned short,0&gt;::{ctor}</FUNCTION>
    <DECORATED>??$?0M$0A@@?$vec@$01G$0A@@glm@@QEAA@AEBU?$vec@$01M$0A@@1@@Z</DECORATED>
    <FUNCLINE>84</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>type_vec4.inl</FILENAME>
      <LINE>470</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26467</DEFECTCODE>
    <DESCRIPTION>Converting from floating point to unsigned integral types results in non-portable code if the double/float has a negative value. Use gsl::narrow_cast or gsl::narrow instead to guard against undefined behavior and potential data loss (es.46).</DESCRIPTION>
    <FUNCTION>glm::vec&lt;4,unsigned char,0&gt;::{ctor}</FUNCTION>
    <DECORATED>??$?0M$0A@@?$vec@$03E$0A@@glm@@QEAA@AEBU?$vec@$03M$0A@@1@@Z</DECORATED>
    <FUNCLINE>469</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>type_vec4.inl</FILENAME>
      <LINE>471</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26467</DEFECTCODE>
    <DESCRIPTION>Converting from floating point to unsigned integral types results in non-portable code if the double/float has a negative value. Use gsl::narrow_cast or gsl::narrow instead to guard against undefined behavior and potential data loss (es.46).</DESCRIPTION>
    <FUNCTION>glm::vec&lt;4,unsigned char,0&gt;::{ctor}</FUNCTION>
    <DECORATED>??$?0M$0A@@?$vec@$03E$0A@@glm@@QEAA@AEBU?$vec@$03M$0A@@1@@Z</DECORATED>
    <FUNCLINE>469</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>type_vec4.inl</FILENAME>
      <LINE>472</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26467</DEFECTCODE>
    <DESCRIPTION>Converting from floating point to unsigned integral types results in non-portable code if the double/float has a negative value. Use gsl::narrow_cast or gsl::narrow instead to guard against undefined behavior and potential data loss (es.46).</DESCRIPTION>
    <FUNCTION>glm::vec&lt;4,unsigned char,0&gt;::{ctor}</FUNCTION>
    <DECORATED>??$?0M$0A@@?$vec@$03E$0A@@glm@@QEAA@AEBU?$vec@$03M$0A@@1@@Z</DECORATED>
    <FUNCLINE>469</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>type_vec4.inl</FILENAME>
      <LINE>473</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26467</DEFECTCODE>
    <DESCRIPTION>Converting from floating point to unsigned integral types results in non-portable code if the double/float has a negative value. Use gsl::narrow_cast or gsl::narrow instead to guard against undefined behavior and potential data loss (es.46).</DESCRIPTION>
    <FUNCTION>glm::vec&lt;4,unsigned char,0&gt;::{ctor}</FUNCTION>
    <DECORATED>??$?0M$0A@@?$vec@$03E$0A@@glm@@QEAA@AEBU?$vec@$03M$0A@@1@@Z</DECORATED>
    <FUNCLINE>469</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>_vectorize.hpp</FILENAME>
      <LINE>21</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'Func' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>glm::detail::functor1&lt;glm::vec,2,float,float,0&gt;::call</FUNCTION>
    <DECORATED>?call@?$functor1@Uvec@glm@@$01MM$0A@@detail@glm@@SA?AU?$vec@$01M$0A@@3@P6AMM@ZAEBU43@@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>_vectorize.hpp</FILENAME>
      <LINE>39</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'Func' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>glm::detail::functor1&lt;glm::vec,4,float,float,0&gt;::call</FUNCTION>
    <DECORATED>?call@?$functor1@Uvec@glm@@$03MM$0A@@detail@glm@@SA?AU?$vec@$03M$0A@@3@P6AMM@ZAEBU43@@Z</DECORATED>
    <FUNCLINE>39</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>_vectorize.hpp</FILENAME>
      <LINE>78</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'Func' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>glm::detail::functor2&lt;glm::vec,4,float,0&gt;::call</FUNCTION>
    <DECORATED>?call@?$functor2@Uvec@glm@@$03M$0A@@detail@glm@@SA?AU?$vec@$03M$0A@@3@P6AMMM@ZAEBU43@1@Z</DECORATED>
    <FUNCLINE>78</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\idolu\Desktop\HW3\glm\detail\</FILEPATH>
      <FILENAME>_vectorize.hpp</FILENAME>
      <LINE>60</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'Func' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>glm::detail::functor2&lt;glm::vec,2,float,0&gt;::call</FUNCTION>
    <DECORATED>?call@?$functor2@Uvec@glm@@$01M$0A@@detail@glm@@SA?AU?$vec@$01M$0A@@3@P6AMMM@ZAEBU43@1@Z</DECORATED>
    <FUNCLINE>60</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>